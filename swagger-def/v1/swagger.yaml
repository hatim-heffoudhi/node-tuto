basePath: /v1
consumes:
    - application/json
definitions:
    Name:
        properties:
            first:
                type: string
            last:
                type: string
        required:
            - first
        type: object
    User:
        properties:
            id:
                type: number
                format: double
            name:
                $ref: '#/definitions/Name'
            email:
                type: string
            status:
                type: string
                enum:
                    - Happy
                    - Sad
            phoneNumbers:
                type: array
                items:
                    type: string
        required:
            - id
            -

            - email
            - phoneNumbers
        type: object
    UserCreationRequest:
        properties:
            email:
                type: string
            name:
                $ref: '#/definitions/Name'
            phoneNumbers:
                type: array
                items:
                    type: string
        required:
            - email
            - name
            - phoneNumbers
        type: object
info:
    title: backend
    version: 1.0.0
    description: 'nexsis poc'
    license:
        name: ISC
paths:
    /users:
        get:
            operationId: GetUsers
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
            description: 'Charge la liste de tous les utilisateurs.'
            security: []
            parameters: []
        post:
            operationId: CreateUser
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
            description: 'Ajoute un nouvel utilisateur.'
            security: []
            parameters:
                -
                    in: body
                    name: requestBody
                    required: true
                    schema:
                        $ref: '#/definitions/UserCreationRequest'
    '/users/{id}':
        get:
            operationId: GetUser
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
            description: 'Charge un utilisateur, d''apr√®s son identifiant.'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    format: double
                    type: number
produces:
    - application/json
swagger: '2.0'
securityDefinitions: {}
host: 'localhost:3000'
